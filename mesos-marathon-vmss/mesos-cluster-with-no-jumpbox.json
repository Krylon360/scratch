{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      }
    },
    "linuxAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Linux Virtual Machine.  Not Required.  If not set, you must provide a SSH key."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Jumpbox Virtual Machine (Password Only Supported)."
      }
    },
    "windowsAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows Jumpbox Virtual Machine."
      }
    },
    "jumpboxEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the jumpbox.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "masterEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the agent pool IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 100"
      },
      "allowedValues": [
        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
        21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
        61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
        81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
      ]
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
      }
    },
    "linuxPublisher": {
      "type": "string",
      "defaultValue": "Canonical",
      "metadata": {
        "description": "This is the publisher of the image used by the linux cluster"
      }
    },
    "linuxOffer": {
      "type": "string",
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "This is the offer of the image used by the linux cluster"
      }
    },
    "linuxSku": {
      "type": "string",
      "defaultValue": "14.04.3-LTS",
      "metadata": {
        "description": "This is the linux sku used by the linux cluster"
      }
    },
    "linuxVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "This is the linux version used by the linux cluster"
      }
    },
    "windowsJumpboxPublisher": {
      "type": "string",
      "defaultValue": "MicrosoftVisualStudio",
      "metadata": {
        "description": "This is the windows publisher used by the windows jumpbox"
      }
    },
    "windowsJumpboxOffer": {
      "type": "string",
      "defaultValue": "VisualStudio",
      "metadata": {
        "description": "This is the windows offer used by the windows jumpbox"
      }
    },
    "windowsJumpboxSku": {
      "type": "string",
      "defaultValue": "VS-2015-Ent-AzureSDK-2.8-WS2012R2.2",
      "metadata": {
        "description": "This is the windows sku used by the windows jumpbox"
      }
    },
    "isValidation": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [0,1],
      "metadata": {
        "description": "This is testing in the validation region"
      }
    },
    "disablePasswordAuthentication": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "This setting controls whether password auth is disabled for Linux VMs provisioned by this template. Default is true which disables password and makes SSH key required."
      }
    },
    "setLinuxConfigurationForVMCreate": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [0,1],
      "metadata": {
        "description": "This setting controls whether Linux configuration with SSH Key is passed in VM PUT Payload.  Defaults to 1.  If SSH Key is blank, this must be set to 0."
      }
    },
    "nameSuffix": {
      "type": "string",
      "defaultValue": "01234567",
      "metadata": {
        "description": "A string to include in the names of resources created.  Defaults to 0.  Can not be blank."
      }
    },
    "vmsPerStorageAccount": {
      "type": "int",
      "defaultValue": 40,
      "metadata": {
        "description": "This specifies the number of VMs per storage accounts"
      }
    },
    "postInstallScriptURI": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "After installation, this specifies a script to download and install.  To disabled, set value to 'disabled'."
      }
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "adminPassword": "[parameters('linuxAdminPassword')]",
    "jumpboxEndpointDNSNamePrefix": "[tolower(parameters('jumpboxEndpointDNSNamePrefix'))]",
    "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "agentEndpointDNSNamePrefix": "[tolower(parameters('agentEndpointDNSNamePrefix'))]",
    "agentCount": "[parameters('agentCount')]",
    "masterCount": "[parameters('masterCount')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "linuxPublisher": "[parameters('linuxPublisher')]",
    "linuxOffer": "[parameters('linuxOffer')]",
    "linuxSku": "[parameters('linuxSku')]",
    "linuxVersion": "[parameters('linuxVersion')]",
    "windowsJumpboxPublisher": "[parameters('windowsJumpboxPublisher')]",
    "windowsJumpboxOffer": "[parameters('windowsJumpboxOffer')]",
    "windowsJumpboxSku": "[parameters('windowsJumpboxSku')]",
    "windowsAdminUsername": "[parameters('windowsAdminUsername')]",
    "windowsAdminPassword": "[parameters('windowsAdminPassword')]",
    "vmsPerStorageAccount": "[parameters('vmsPerStorageAccount')]",
    "postInstallScriptURI": "[parameters('postInstallScriptURI')]",

    "nameSuffix": "[parameters('nameSuffix')]",

    "isValidation": "[parameters('isValidation')]",
    "storageLocations": [
      "[resourceGroup().location]",
      "East US 2 (Stage)"
    ],
    "storageLocation": "[variables('storageLocations')[variables('isValidation')]]",

    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "disablePasswordAuthentication": "[parameters('disablePasswordAuthentication')]",
    "setLinuxConfigurationForVMCreate": "[parameters('setLinuxConfigurationForVMCreate')]",
    "linuxConfigurations": [
        {},
        {
            "disablePasswordAuthentication": "[variables('disablePasswordAuthentication')]",
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[variables('sshRSAPublicKey')]"
                    }
                ]
            }
        }
    ],
    "linuxConfiguration": "[variables('linuxConfigurations')[variables('setLinuxConfigurationForVMCreate')]]",

    "orchestratorName": "mesos",

    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "agentPublicIPAddressName": "[concat(variables('orchestratorName'), '-agent-ip-', variables('agentEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "jumpboxPublicIPAddressName": "[concat(variables('orchestratorName'), '-jumpbox-ip-', variables('jumpboxEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",

    "marathonEnabled": true,
    "chronosEnabled": true,
    "swarmEnabled": false,
    "osImagePublisher": "[variables('linuxPublisher')]",
    "osImageOffer": "[variables('linuxOffer')]",
    "osImageSKU": "[variables('linuxSku')]",
    "osImageVersion": "[variables('linuxVersion')]",

    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "masterSubnetName": "[concat(variables('orchestratorName'), '-masterSubnet')]",
    "masterSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('masterSubnetName'))]",
    "masterAddressPrefix": "172.16.0.0/24",
    "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/8",
    "subnetPrefix": "10.0.0.0/11",
    "storageAccountType": "Standard_GRS",
    "storageAccountPrefixes": [
      "0","6","c","i","o","u","1","7","d","j","p","v",
      "2","8","e","k","q","w","3","9","f","l","r","x",
      "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "storageAccountBaseName": "[concat(uniqueString(variables('masterEndpointDNSNamePrefix')), variables('orchestratorName'))]",
    "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddr'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),' ',variables('postInstallScriptURI'))]",

    "jumpboxNSGName": "[concat(variables('orchestratorName'), '-jumpbox-nsg-', variables('nameSuffix'))]",
    "jumpboxNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('jumpboxNSGName'))]",
    "jumpboxAddr": 4,
    "jumpboxVMName": "[concat('jb-', variables('nameSuffix'))]",
    "jumpboxVMSize": "Standard_A1",

    "jumpboxLinuxInstallParameters": "[concat(variables('adminUsername'), ' ', variables('masterCount'), ' ', variables('masterFirstAddr'))]",
    "jumpboxLinuxCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-ubuntu.sh ',variables('jumpboxLinuxInstallParameters'),' >> /var/log/azure/jumpbox-bootstrap.log 2>&1 &\" &')]",

    "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
    "setBrowserFirstTabDefaultSuffix": "0:5050",
    "jumpboxWindowsCustomScript": "[concat(variables('setBrowserFirstTabDefaultPrefix'),variables('masterVMNamePrefix'),variables('setBrowserFirstTabDefaultSuffix'))]",

    "masterNSGName": "[concat(variables('orchestratorName'), '-master-nsg-', variables('nameSuffix'))]",
    "masterNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('masterNSGName'))]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterFirstAddr": 5,
    "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterVMSize":"Standard_A1",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",

    "agentNSGName": "agent-nsg",
    "agentNSGName": "[concat(variables('orchestratorName'), '-agent-nsg-', variables('nameSuffix'))]",
    "agentNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentNSGName'))]",
    "agentFirstAddr": 20,
    "agentVMNamePrefix": "[concat(variables('orchestratorName'), '-agent-', variables('nameSuffix'))]",
    "agentsLbName": "[concat(variables('orchestratorName'), '-agent-lb-', variables('nameSuffix'))]",
    "agentsLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agentsLbName'))]",
    "agentsLbIPConfigName": "[concat(variables('orchestratorName'), '-agent-lbFrontEnd-', variables('nameSuffix'))]",
    "agentsLbIPConfigID": "[concat(variables('agentsLbID'),'/frontendIPConfigurations/', variables('agentsLbIPConfigName'))]",
    "agentsLbBackendPoolName": "[concat(variables('orchestratorName'), '-agent-pool-', variables('nameSuffix'))]",
    "agentStorageAccountsCount": 3,
    "agentsPerIPv4Octet": 200,
    "agentCustomScript": "[concat('/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1')]",
    "agentRunCmdFile": "[concat(' -  content: |\n        #!/bin/bash\n        ',variables('agentCustomScript'),'\n    path: /opt/azure/containers/install-cluster.sh\n    permissions: \"0744\"\n')]",
    "agentRunCmd": "[concat('runcmd:\n -  [ /bin/bash, /opt/azure/containers/install-cluster.sh ]\n\n')]"
  },
  "resources": [

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('masterStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('storageLocation')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]",
            "[variables('masterAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          },
          {
            "name": "[variables('masterSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('masterAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('masterAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('masterPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('masterLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2200)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('masterNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]",
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]",
        "[variables('masterNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('masterNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('masterAddressPrefix'),'0/24')[0], copyIndex(variables('masterFirstAddr')))]",
              "subnet": {
                "id": "[variables('masterSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('masterStorageAccountName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAK3zr1YC/+2Y/2/jNBTAf+9fYW2Ruu1I3I0NjhV2OsYhJoE2HRwgJi7ynNc219SObKfbQONv59lO0i9r0pa7CSQuldo0fs/v5b1P7PcCSkkVZ3JItElAqX6nA1MQRpM/OwSPW6nGoGIuhQBuUik0OewdHfc7DygopuT88vWryx/jqzdff39xHl9c/YxDnZExeanPOAetnQE6ZYriCRXDVNxRPxLhhb6ThNqTJUE34OWcYFawOGd8zIaAv2ZEukGuYJDeUfRyQF9EKNDvd0vpVPCsSIBM0glE5j4H7c0lMGBFZmJ7ibA8z1LO7P1RyQ2YUBsFbFLOoUEkgzQDIoVXHgPkLEunEBucVhaGfHZSyu6SQqM10FKHidDumsJ/2RQUOTz6POrh57CeWNnLPlTu3lJtQJDnvdo/L9KvJfz/WLAJkIRLHR3MxpSUhlCZG+rs5yNQgHE26Ci1smGR0kKr0rizJ/1dk6+I15nzxXt+q1ID5K0fDUig+QgmcEppYLMcj6QurVGSg5owgfDMPHp4bOmvajK69+LLQmVn0cF+sGQ2V/LuHm/dxCNgiCX5Ds2QmcV+u/RLRCs34SvBZZKKIdnZWVTQxY2OMaEGA+mQWADgna7SvEKeXLPwj174Rfj7s9PnPcxT4CPAFJKIykQNN9I9Pu5VunykpLDxW1bdRXgRB5YQOUCq7J0UuQeT3CJjBcZkIBVHfjFRYUnZJ4/mIJwhkpmPDR8xMQS9IoA505rYEGNyvXDk8nR60jvp0QBTFaQ6ZmqoA/s1n+SVPGmDp7wRKD/cSpQX2RSsWvx9WPovxRxDnjaE/AmwvwvfsSnTXKW5aUZ4p0tplzwjNnL406U77lIwy5qCJFXLMsO1tNj1tXn1caOtrDiJjVEppf8HpKwKd70E+1xdv6VuNWtej5e2Aa8WHWBCUIFkTJutDKIhnbEp2KDajezMebDfbB9zgrm3KixJFOl257Ywe0ykgphjWFSciryoEqiXH4n+Fnd1g5kcr1SIb+5jW4S4ksDVHAt34+qPTjtZ5bHdtlYev4avgWXhxRUJFEwk+mODsqnut1LdMpVAYs9I4AVxgvguHlRD9mz7+a6UNLJ6RFcGYJ7hWTrXo+NEa2rS5Owad1HcS1+Gv4X/KjfesQVv3gOgj+B8cHCwWE65R8efLsITIT30xYyflfh4RZvRD89P6d+iS9jCIEN0e4j8bB8xasVoLqGrbLhdAFvdGjdXY1SJCmqMKFl1cfMZt1dfp7LqIcCdzbCEGbZENvKCfaZ5zFAl7yFqndp1lJX8Yi2FvTHTrZ1orQeG07XFYdVeNZclpUBTiVi3Z6314S756fKbyz0+YZkUcL9/Sn5gYyBmBOQXuCFvLtzrEFuzMVsU+7xIdR81VDyV1b3HS8s/6XDnV8EJ1lx1CWgbURocbteelW1nY0jL8YaI1k3r5k1/pfLU0bCt9XbRoPl4mDORsBLR6KZIM1y3BzIaFFkW2TcCSx7bFav09ZxhfMJzfKKUzMiOkCG3V5aar7ZHYpW99c+EnSVOxJpXNlairXGy41u/unFKT0714dGnbXn03w+dvwGVUmSwwxQAAA==\n    path: /opt/azure/containers/nginx.conf\n    permissions: \"0744\"\n\n')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('masterStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('masterCustomScript')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),copyIndex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('storageLocation')]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('agentPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('agentEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('agentsLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('agentsLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('agentPublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('agentsLbBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsLbID'),'/probes/tcpHTTPProbe')]"
              }
            }
          },
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsLbID'),'/probes/tcpHTTPSProbe')]"
              }
            }
          },
          {
            "name": "LBRulePort8080",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsLbID'),'/probes/tcpPort8080Probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpPort8080Probe",
            "properties": {
              "protocol": "tcp",
              "port": 8080,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatRules": []
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('agentNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "http",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 220,
              "direction": "Inbound"
            }
          },
          {
            "name": "Tcp8080",
            "properties": {
              "description": "Allow port 8080",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 230,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[concat(variables('agentVMNamePrefix'), '-vmss')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(0,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(0,variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),1)]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(1,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(1,variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),2)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(2,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(2,variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),3)]",
        "[variables('agentsLbID')]",
        "[variables('vnetID')]",
        "[variables('agentNSGID')]"
      ],
      "sku": {
        "name": "[variables('agentVMSize')]",
        "tier": "Standard",
        "capacity": "[variables('agentCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('osImagePublisher')]",
              "offer": "[variables('osImageOffer')]",
              "sku": "[variables('osImageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(variables('agentVMNamePrefix'), 'vmssosdisk', 0)]",
              "vhdContainers": [
                "[concat('https://',variables('storageAccountPrefixes')[mod(0,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(0,variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),1, '.blob.core.windows.net/osdisk')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(1,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(1,variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),2, '.blob.core.windows.net/osdisk')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(2,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(2,variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),3, '.blob.core.windows.net/osdisk')]"
              ],
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('agentVMNamePrefix')]",
            "adminUsername": "[variables('adminUsername')]",
            "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAK3zr1YC/+2Y/2/jNBTAf+9fYW2Ruu1I3I0NjhV2OsYhJoE2HRwgJi7ynNc219SObKfbQONv59lO0i9r0pa7CSQuldo0fs/v5b1P7PcCSkkVZ3JItElAqX6nA1MQRpM/OwSPW6nGoGIuhQBuUik0OewdHfc7DygopuT88vWryx/jqzdff39xHl9c/YxDnZExeanPOAetnQE6ZYriCRXDVNxRPxLhhb6ThNqTJUE34OWcYFawOGd8zIaAv2ZEukGuYJDeUfRyQF9EKNDvd0vpVPCsSIBM0glE5j4H7c0lMGBFZmJ7ibA8z1LO7P1RyQ2YUBsFbFLOoUEkgzQDIoVXHgPkLEunEBucVhaGfHZSyu6SQqM10FKHidDumsJ/2RQUOTz6POrh57CeWNnLPlTu3lJtQJDnvdo/L9KvJfz/WLAJkIRLHR3MxpSUhlCZG+rs5yNQgHE26Ci1smGR0kKr0rizJ/1dk6+I15nzxXt+q1ID5K0fDUig+QgmcEppYLMcj6QurVGSg5owgfDMPHp4bOmvajK69+LLQmVn0cF+sGQ2V/LuHm/dxCNgiCX5Ds2QmcV+u/RLRCs34SvBZZKKIdnZWVTQxY2OMaEGA+mQWADgna7SvEKeXLPwj174Rfj7s9PnPcxT4CPAFJKIykQNN9I9Pu5VunykpLDxW1bdRXgRB5YQOUCq7J0UuQeT3CJjBcZkIBVHfjFRYUnZJ4/mIJwhkpmPDR8xMQS9IoA505rYEGNyvXDk8nR60jvp0QBTFaQ6ZmqoA/s1n+SVPGmDp7wRKD/cSpQX2RSsWvx9WPovxRxDnjaE/AmwvwvfsSnTXKW5aUZ4p0tplzwjNnL406U77lIwy5qCJFXLMsO1tNj1tXn1caOtrDiJjVEppf8HpKwKd70E+1xdv6VuNWtej5e2Aa8WHWBCUIFkTJutDKIhnbEp2KDajezMebDfbB9zgrm3KixJFOl257Ywe0ykgphjWFSciryoEqiXH4n+Fnd1g5kcr1SIb+5jW4S4ksDVHAt34+qPTjtZ5bHdtlYev4avgWXhxRUJFEwk+mODsqnut1LdMpVAYs9I4AVxgvguHlRD9mz7+a6UNLJ6RFcGYJ7hWTrXo+NEa2rS5Owad1HcS1+Gv4X/KjfesQVv3gOgj+B8cHCwWE65R8efLsITIT30xYyflfh4RZvRD89P6d+iS9jCIEN0e4j8bB8xasVoLqGrbLhdAFvdGjdXY1SJCmqMKFl1cfMZt1dfp7LqIcCdzbCEGbZENvKCfaZ5zFAl7yFqndp1lJX8Yi2FvTHTrZ1orQeG07XFYdVeNZclpUBTiVi3Z6314S756fKbyz0+YZkUcL9/Sn5gYyBmBOQXuCFvLtzrEFuzMVsU+7xIdR81VDyV1b3HS8s/6XDnV8EJ1lx1CWgbURocbteelW1nY0jL8YaI1k3r5k1/pfLU0bCt9XbRoPl4mDORsBLR6KZIM1y3BzIaFFkW2TcCSx7bFav09ZxhfMJzfKKUzMiOkCG3V5aar7ZHYpW99c+EnSVOxJpXNlairXGy41u/unFKT0714dGnbXn03w+dvwGVUmSwwxQAAA==\n    path: /opt/azure/containers/nginx.conf\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
            "linuxConfiguration": "[variables('linuxConfiguration')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "agentNodeNic",
                "properties": {
                  "primary": "true",
                  "networkSecurityGroup": {
                    "id": "[variables('agentNSGID')]"
                  },
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetRef')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFQDN": {
      "type": "string",
      "value": ""
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "agentFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}
