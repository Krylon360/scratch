{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "jumpboxEndpointDNSName": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the jumpbox.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "managementEndpointDNSName": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the container service.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "applicationEndpointDNSName": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the application.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 200"
      },
      "allowedValues": [
        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
        21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
        61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
        81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
      ]
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "Configure all linux machines with the SSH rsa public key string.  Use 'disabled' to not configure access with SSH rsa public key."
      }
    }
  },
  "variables": {
    "adminUsername":"azureuser",
    "marathonEnabled":true,
    "chronosEnabled":true,
    "swarmEnabled":false,
    "masterVMNamePrefix": "master",
    "agentVMNamePrefix": "agent",
    "jumpboxVMNamePrefix": "jumpbox",
    "osImagePublisher": "Canonical",
    "osImageOffer": "UbuntuServer",
    "osImageSKU": "14.04.3-LTS",
    "osImageVersion": "latest",
    "virtualNetworkName": "VNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetName": "Subnet",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/18",
    "jumpboxAddr": 4,
    "masterFirstAddr": 5,
    "agentFirstAddr": 20,
    "nsgName": "node-nsg",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "storageAccountType": "Standard_GRS",
    "storageAccountPrefixes": [
      "0","6","c","i","o","u","1","7","d","j","p","v",
      "2","8","e","k","q","w","3","9","f","l","r","x",
      "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "vmsPerStorageAccount": 10,
    "storageAccountBaseName": "[concat(uniqueString(subscription().subscriptionId,resourceGroup().id),'mesos')]",
    "managementStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none",
    "postInstallScriptURI": "disabled",
    "jumpboxVMName": "[concat(variables('jumpboxVMNamePrefix'), '1')]",
    "jumpboxVMSize":"Standard_D1",
    "jumpboxOSImagePublisher": "MicrosoftVisualStudio",
    "jumpboxOSImageOffer": "VisualStudio",
    "jumpboxOSImageSKU": "VS-2015-Enterprise-AzureSDK-2.7-WS2012R2",
    "jumpboxOSImageVersion": "latest",
    "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
    "setBrowserFirstTabDefaultSuffix": "1:5050",
    "masterAvailabilitySet": "masterAvailabilitySet",
    "masterLbName": "masterlb",
    "masterVMSize":"Standard_A1",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigName": "masterLBFrontEnd",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbBackendPoolName": "master-pool",
    "singleQuote": "'",
    "agentAvailabilitySet": "agentAvailabilitySet",
    "appLbName": "appLb",
    "appNodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('appLbName'))]",
    "appNodesLbIPConfigName": "NodesAppLBFrontEnd",
    "appNodesLbIPConfigID": "[concat(variables('appNodesLbID'),'/frontendIPConfigurations/', variables('appNodesLbIPConfigName'))]",
    "appNodesLbBackendPoolName": "node-app-pool",
    "agentStorageAccountsCount": "[add(div(parameters('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(parameters('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(parameters('agentCount'), variables('vmsPerStorageAccount')),1)))]",
    "agentsPerIPv4Octet": 200
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('managementStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "description": "HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 220,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp",
            "properties": {
              "description": "RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('jumpboxEndpointDNSName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('jumpboxEndpointDNSName')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('jumpboxVMName'), '-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('jumpboxEndpointDNSName'))]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], variables('jumpboxAddr'))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('jumpboxEndpointDNSName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpboxVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxVMName'), '-nic')]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('jumpboxVMSize')]"
        },
        "osProfile": {
          "computername": "[variables('jumpboxVMName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('jumpboxOSImagePublisher')]",
            "offer": "[variables('jumpboxOSImageOffer')]",
            "sku": "[variables('jumpboxOSImageSKU')]",
            "version": "[variables('jumpboxOSImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('jumpboxVMName'),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('jumpboxVMName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('jumpboxVMName'), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('jumpboxVMName'),'/installcustomscript')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('jumpboxVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "settings": {
          "commandToExecute": "[concat(variables('setBrowserFirstTabDefaultPrefix'),variables('masterVMNamePrefix'),variables('setBrowserFirstTabDefaultSuffix'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('masterAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('managementEndpointDNSName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('managementEndpointDNSName')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('masterLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('managementEndpointDNSName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('managementEndpointDNSName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[parameters('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2211)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]",
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(1))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], copyIndex(variables('masterFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(1))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('masterVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(concat('#cloud-config\n# vim: syntax=yaml\n\nwrite_files:\n-   encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/clusterinstall.sh\n    permissions: ',variables('singleQuote'),'0744',variables('singleQuote'),' \n\nruncmd:\n - /bin/bash /opt/azure/clusterinstall.sh ',parameters('masterCount'), ' masters-are-not-agents ', variables('masterVMNamePrefix'), ' ', variables('swarmEnabled'), ' ', variables('marathonEnabled'), ' ', variables('chronosEnabled'), ' ', variables('omsStorageAccount'), ' ', variables('omsStorageAccountKey'), ' ', variables('adminUsername'), ' \"', parameters('sshRSAPublicKey'), '\" ',' > /var/log/azure/clusterinstall.log'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),copyIndex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('agentAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('applicationEndpointDNSName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('applicationEndpointDNSName')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('appLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('applicationEndpointDNSName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('appNodesLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('applicationEndpointDNSName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appNodesLbBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPProbe')]"
              }
            }
          },
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPSProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatRules": []
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('agentCount')]"
      },
      "dependsOn": [
        "[variables('appNodesLbID')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0.0/18')[0], div(copyIndex(),variables('agentsPerIPv4Octet')), '.', add(mod(copyIndex(),variables('agentsPerIPv4Octet')), variables('agentFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentAvailabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('agentVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('agentVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(concat('#cloud-config\n# vim: syntax=yaml\n\nwrite_files:\n-   encoding: gzip\n    content: !!binary |\n        H4sICK5/LVYAA2NvbmZpZ3VyZS1tZXNvcy1jbHVzdGVyLnNoAO0aaVPbSPa7fsUb4RogY1k+QgKk\n        PFsEnIVKwJRNsrsTmESW2lixrNaoJXMt/31fXzps2ZDsbNV82EkNtrrf1e9+LW/8ZI/80B45bGIY\n        Gz/+n7EBhzQc+9dpTOCUMMqgHxJ4S28Nvncx8Rn4IUucIGCQTAiMaRDQGz+8BpfOIhqSMGEIaME9\n        pVNColg8zASlmcMSohac2EkmNCzsOteI+1/JbjCSgHVrGMSdUDBRyjjhkkn6bpBy9iinPJ+T+DQ0\n        Dc9JiBEh+9sFxaFo5yjljCASW9gyTg+GF73BYf/j2UW31lKPp/2jXrfWVk/ng967k392ax1j+I+D\n        wWnv7ODth95Rt/YS9wcHF8f9s2xpxzg8HvTP+sNs5ZVxcCionx2cIs3X4mi/3OrV971/dWu7+rwH\n        v30c9D4Oe4Nubc8YDo/F7kOr+Wgc9097RyeDrmlP6IzYtQzSND6dCtJfJ5QlIZ7yK1/5ePoWqXwV\n        +qtJCPg3MOLBJrMbLz7/3rT2ri63PouPXy63X9Tsy5a9yXHVcVfgXm5l2NsvFLrGVeY6Fd6B7peG\n        yT7UCho2yxCn1CMZANf5wv55TMb+bQYhBdMw8xk/7L6WUC/rs8sN8bUO+lBisUymaFLcLj7WYcG+\n        QpLSSh3K9kaI8oJmU3AChCk8mZVRji6LLpFGwNgEHNcljFWCcSfhblFT/mE3EME4+Hhx/O7kA7qb\n        3LadFEM09u+J92VK7pjhj+EzKANLN8sN/PvlFtKwYubA5XbjhTQtdLsYhnLZhCt4w1NGaAAISj+B\n        5YHiVdwEYKlHwfLBSiF3WZhNPT/WCGvg3MmMevC62SzAjn2jwJYguDrscxgnNHUnOcqTrF9x1gVo\n        ZA6wqLZqToSA5RSQScCIRjZDCnMn8D1AawDmLcc0+LmqHeGQzmY0hHdp6PJEt8IRSMgw0x/c458z\n        ktzQeLq1bTwgxw2QWyLJ8xwBPG4A03+M2TSYO6OAC8Z3BmKBHBMnSCZ33RY/MY3Bx0IBD61Go9Vu\n        Pr4Bjwq9CVIq+MSCsEntb2iUP6AJV2ItsweXQycomDgMRoSESD0NPZ7HMbunRAFWSNJUW1J75YPI\n        UxBmKphRTJyp+C6shQYOsHoBP4yHVU07T22ZDVhYIKXkmdySY87No4RBSBPNtg7OiMripKqplIPc\n        +ongKf21ZIRQ2gf4H4ab6nmN2nOt31zzStG3PTK3wzQIYJIk0b7Ne4brBhbuP9USC4ItW0GfBJ1p\n        IoGeskJz0QxlHqtNsMCOm0CxXGUCfywbBPkQgZMbpq1jeTk4ENB1Qm3eZ1lnISiEYi3/r26J/4Uh\n        UHOF2BBK9zx8Yj9uo8eKzIbd0PDi4OhokDc9qHDsP3wmO1NQuU+czCy3D6KU5W1A+YgxFt04BK5f\n        lbCztZaWB4lmfLKKo3UjNOKJ9OqoNlnmdp+JtjgXbJnGgryiIRLSSkBmOTGxBBVmLvtSQfSC8CXx\n        dQFbOFmzdDLBYP3BQtniy4PdT7kNmDqYeuqaZjFOvjL0/1apFfwKb4QHFs/tm2BdJ2C2Ko6XEa49\n        qK+PdVOfSXyenEuXwAzJTyBgoPZQNP5j7cF/xJrt3Exh8wGi2EfAWgsesXldwaT2IOk+7rdbuy3J\n        cQO8FFMGVfNIQpwZ+mxEYp+EbtHtsVagzbCZoAwjm87R2l7IRCVhklIlxyWRM94qYmULohDQcGgE\n        GUfKChGuY+eMVAWWZlLbUt+2xaJEYUncNe+nWENyEfCrIvFoFthlCJzlitFtI4t+RoIxN/7R2XAV\n        sGqOazqes2Ze91WqjbJJ4trysEukkOOJTClwRN0pH0tXsFFgPAk5MsWK8ZE/ewJTLLMbJ55hV574\n        mFVkuf2jb4k6y1BJuNCQ0Lzccjn5nA5DPqIqAQSZwMeYRZuHsN/uvN6BLez5eBteh1GacLXMMYlu\n        S8k2j/qH73uDL/3zi2HXtI4hDXHssW177sR2nIa2YsjwA3C72RD/BGFzs6groSiPjJ00SBQWClce\n        7zEBE5fXvJhco5DxHY9pHqr902GVPLXCE1iWRrcy9FbndaPV2WnsdRp7ZXG06RYkEvuMxHPfJVr1\n        6DVchbqRlZpcbmGdRCPklU7EBV9bWaM7eYUWvDWJcFzIP39CmS6LUa7SR4ti6wJdlChiqLPvbaFK\n        XFcX7lyAQs02y1VWRZCxEGByFuX+UY4ryb8wzcJPXT7dhIRncMVfXXgA9M6HF4OTs793zSPpD73Q\n        iyimYHYe04S6NOiKKHtz4Lr87uAMFd6tPRTIP+qt9+Qu38E57NHMnAAwYNBNlT91neDGuWN8QC26\n        qT1jEloUsnlHt9G1B5mAHmXQYlbWQgsO6pqmelYrJCJx31YFIl3fiRKLT36ON0dJ+USOsYCSZ98a\n        6QgPmYoMw4/izqG386q103r7zjg6QYH6mMsDNvoSk4A4jHc/DOMuiWHz834aYSXav9rk3zHkxfdt\n        4xC7CXkFVUZ0mUpCpkdGWg0xwfTfENUtmpCYNHyKqpGcH7GmamKP2OL4obmUgfCANqNp7BLW4Imw\n        4dkFYnxFplepDc+zuEYEUz+hmFGsO4giZ59GJPzmTa3YxqciBkKLxHwHaSSu/Sr3VKcJmsyu9Q3T\n        Fjq+F/D7lMoerJKQZWE2cYl1R7I7U8jPo0f770NdNfBnvpTf3v5G6XuM/IrKVnCs+6kgK4uaqPTy\n        K3aPfN1UVq6V4JYMJ/bs+6mxpsvN7tWWsNVNMYltTt6e3fne93SBf0IDp+6LZRBx2G6hf9vd3d3v\n        4J/K7mJBdnxsuOPrP7vdq5Kvotv7MUlFUVjrVmvdTL4kUFevvIV5x+/M5SXF8ylW+s0fKY3TWfcr\n        ai0u2R9saMMv0PqaOZcErXZMS9K1JYxRGrfXY/hREXotqIbSEm1KvRyqlw7Y0J36bkwZHScghtLl\n        BqxET72tkENgQTnw889q2CvdKMuJL4lTUrpn1TU4e92i+gZ5lWpFirHaFZ6hQdxozSmfi4c5oQLU\n        Vi+C+DShN6oykNoytwvDRBl+WYclPvdT1Qby28pMCTwmx44fiEhLHDZlfIWiymIxrGLKnc2I52OF\n        CO406+YTrDTBLzyf0zQxdNiOHczzTyC7E+JORU/z1wzEDRxRbsKAOp4gXKpIFuaqZbdKWWwH1HUC\n        ewlIDEfZXOQnk3TEO5ZCqc9xbNVwMJwBpAD2vNloN5o5iCUXLBzQ0lvLmXmvXjaS63vNDbs5uL+d\n        j+G5CLP5WtDKo5UOOegN+x8+8ddoLo4dwtpytm1wW6MnXGPLIrO77N+wA0PnwQ4cq5yuUapEtXmF\n        yq5TxFRziVP3pbkvPlGBrfZrMda1xLAvBbk06wIwJmPkPBkSZOwxjtSSG0kSFJ48ytsxSbOEH9E4\n        4cs7HYUmXbuAKsdVEktkNWBqdIJkA7kTU5o0MiU1FqQUg38sBPx8ada0Ai/NK5wwTPg1N0jjGysk\n        sfnCxhO2kci5NjHS3diP+NsRfXJeeC/NfDL/hkkYnDEPBj4ND+/wuDPrE3yjIwZbsbvNM4eaMtXt\n        pr4nyOotEuPlXcwVxGuod+hY8xkwfxZhYsJv2MMynyepnB5/n+4k/sgP/OQObjBQkNJH0eHX4YiM\n        fCeswyG2PP1hXXAcHPc+gMeHa+zCYUjIPiKo1jyNBP/ChICZh05H+L+9gVuh58Se5Xs+nTFDgPKS\n        xRKKU4EHsQuDj2cfep96H7qf252XO1cGWi1yblCd5Ja4TygexwWZrZ9hn7K5i4WlZG4RSiK2/NBP\n        NIi+HMg5y9sBnlSf2TXLLHqw/rcIlVeeG3DgeXqa5BM+BhXhb0/jzOXkZl221ivqPwucObFL+Cyj\n        zmNFzEflXzGsvhqWfHkgs/3PLavdqrc71uu9+m7LetnZ26u/fNlsWTvNl3v1neZO29pt8r0m7nba\n        zWbzar2QmTTF2+FKjki8KTl8L11xifF0wyYRn9OvScisXctUm/vMyXmxM09E5GMgAB1DIZFnmf7L\n        xel5t7DRwBTB5YhxCB9DLQdaGmoWRho90CgdFirED8428OuvC/xFr4+flZVpCRojrrCwhPB9vYoO\n        NTcLNR65EKc4VetrPOBdRRRTV+j+e2mrC4mtmGwv/PSHZ8ex7oZyBmZ1t1NKJVkaz64aK3ONoqEh\n        sjcyz2nSFwnqNlUTEyGgKC78TORZBN1JTEPKivSKPyuYOWHqBEvRwq2TD40N3tvGvkdW64cXi+fQ\n        LCpsJdkFrSLlbBCqfNNUNrgMcrOaqNjLlCHRea0NMMY8qCIkii86rkeg9jfz2corUHjinFokdUyV\n        QrWbqgZE+V8mm5n9ag0GaShfQHB5UD+F+sPLOE/G0O68fpW9TtiWd7CZ71/psbL4Q6YV3rWgcFXw\n        1PuPbFtcOmMzc+3PiXqjKa+6cA21TSCNhH3yy2mBWLzVFjeyHv+1jpDqyymmouEX8Ts33k/CpcqW\n        S7e22UYkTi0vZfGhg5/7/E9JWTm4q8whb2lm6GZo2pyLGsktGiUSsKHKRFc1vmthuRG6gnn5Ms2A\n        /x86YusisexhPHstxkeCPbPH67Ns6HVkSLh3GIxsQrKx9Xkv8sT98KJIa39I+h/eFRRegysAAA==\n    path: /opt/azure/clusterinstall.sh\n    permissions: ',variables('singleQuote'),'0744',variables('singleQuote'),' \n\nruncmd:\n - /bin/bash /opt/azure/clusterinstall.sh ',parameters('masterCount'), ' slaveconfiguration ', variables('masterVMNamePrefix'), ' ', variables('swarmEnabled'), ' ', variables('marathonEnabled'), ' ', variables('chronosEnabled'), ' ', variables('omsStorageAccount'), ' ', variables('omsStorageAccountKey'), ' ', variables('adminUsername'), ' \"', parameters('sshRSAPublicKey'), '\" ',' > /var/log/azure/clusterinstall.log'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))), '.blob.core.windows.net/vhds/', variables('agentVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', parameters('jumpboxEndpointDNSName'))).dnsSettings.fqdn]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', parameters('managementEndpointDNSName'))).dnsSettings.fqdn]"
    },
    "applicationFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', parameters('applicationEndpointDNSName'))).dnsSettings.fqdn]"
    }
  }
}
