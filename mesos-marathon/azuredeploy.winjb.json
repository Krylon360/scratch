{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "jumpboxEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the jumpbox.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "managementEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the container service.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "applicationEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the application.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 200"
      },
      "allowedValues": [
        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
        21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
        61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
        81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
      ]
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "Configure all linux machines with the SSH rsa public key string.  Use 'disabled' to not configure access with SSH rsa public key."
      }
    }
  },
  "variables": {
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "jumpboxEndpointDNSNamePrefix": "[tolower(parameters('jumpboxEndpointDNSNamePrefix'))]",
    "managementEndpointDNSNamePrefix": "[tolower(parameters('managementEndpointDNSNamePrefix'))]",
    "applicationEndpointDNSNamePrefix": "[tolower(parameters('applicationEndpointDNSNamePrefix'))]",
    "agentCount": "[parameters('agentCount')]",
    "masterCount": "[parameters('masterCount')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",

    "marathonEnabled": true,
    "chronosEnabled": true,
    "swarmEnabled": true,
    "osImagePublisher": "Canonical",
    "osImageOffer": "UbuntuServer",
    "osImageSKU": "14.04.3-LTS",
    "osImageVersion": "latest",
    "virtualNetworkName": "VNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetName": "Subnet",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/18",
    "nsgName": "node-nsg",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "storageAccountType": "Standard_GRS",
    "storageAccountPrefixes": [
      "0","6","c","i","o","u","1","7","d","j","p","v",
      "2","8","e","k","q","w","3","9","f","l","r","x",
      "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "vmsPerStorageAccount": 10,
    "storageAccountBaseName": "[concat(uniqueString(subscription().subscriptionId,resourceGroup().id),'mesos')]",
    "managementStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none",
    "postInstallScriptURI": "disabled",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),' \"',variables('sshRSAPublicKey'),'\" ')]",

    "jumpboxAddr": 4,
    "jumpboxVMName": "jumpbox1",
    "jumpboxVMSize":"Standard_D1",

    "jumpboxLinuxInstallParameters": "[concat(variables('adminUsername'), ' \"', variables('sshRSAPublicKey'), '\"')]",
    "jumpboxLinuxCustomScript": "[concat('nohup /bin/bash /opt/azure/containers/jumpboxinstall.sh ',variables('jumpboxLinuxInstallParameters'),' >> /var/log/azure/jumpbox-bootstrap.log 2>&1 &')]",

    "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
    "setBrowserFirstTabDefaultSuffix": "1:5050",
    "jumpboxWindowsCustomScript": "[concat(variables('setBrowserFirstTabDefaultPrefix'),variables('masterVMNamePrefix'),variables('setBrowserFirstTabDefaultSuffix'))]",

    "masterFirstAddr": 5,
    "masterVMNamePrefix": "master",
    "masterAvailabilitySet": "masterAvailabilitySet",
    "masterLbName": "masterlb",
    "masterVMSize":"Standard_A1",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigName": "masterLBFrontEnd",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbBackendPoolName": "master-pool",
    "masterCustomScript": "[concat('/bin/bash /opt/azure/containers/clusterinstall.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1')]",

    "agentFirstAddr": 20,
    "agentVMNamePrefix": "agent",
    "agentAvailabilitySet": "agentAvailabilitySet",
    "appLbName": "appLb",
    "appNodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('appLbName'))]",
    "appNodesLbIPConfigName": "NodesAppLBFrontEnd",
    "appNodesLbIPConfigID": "[concat(variables('appNodesLbID'),'/frontendIPConfigurations/', variables('appNodesLbIPConfigName'))]",
    "appNodesLbBackendPoolName": "node-app-pool",
    "agentStorageAccountsCount": "[add(div(variables('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),1)))]",
    "agentsPerIPv4Octet": 200,
    "agentCustomScript": "[concat('nohup /bin/bash /opt/azure/containers/clusterinstall.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('managementStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "description": "HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 220,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp",
            "properties": {
              "description": "RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('jumpboxEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('jumpboxEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('jumpboxVMName'), '-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxEndpointDNSNamePrefix'))]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], variables('jumpboxAddr'))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxEndpointDNSNamePrefix'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpboxVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxVMName'), '-nic')]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('jumpboxVMSize')]"
        },
        "osProfile": {
          "computername": "[variables('jumpboxVMName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftVisualStudio",
            "offer": "VisualStudio",
            "sku": "VS-2015-Enterprise-AzureSDK-2.7-WS2012R2",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('jumpboxVMName'),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('jumpboxVMName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('jumpboxVMName'), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('jumpboxVMName'),'/installcustomscript')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('jumpboxVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "settings": {
          "commandToExecute": "[variables('jumpboxWindowsCustomScript')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('masterAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('managementEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('managementEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('masterLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('managementEndpointDNSNamePrefix'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('managementEndpointDNSNamePrefix'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2211)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]",
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(1))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], copyIndex(variables('masterFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(1))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('masterVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/clusterinstall.sh\n    permissions: \"0744\"\n')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1), '/configuremaster')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('masterCustomScript')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),copyIndex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('agentAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('applicationEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('applicationEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('appLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('applicationEndpointDNSNamePrefix'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('appNodesLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('applicationEndpointDNSNamePrefix'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appNodesLbBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPProbe')]"
              }
            }
          },
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPSProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatRules": []
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[variables('appNodesLbID')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0.0/18')[0], div(copyIndex(),variables('agentsPerIPv4Octet')), '.', add(mod(copyIndex(),variables('agentsPerIPv4Octet')), variables('agentFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentAvailabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('agentVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/clusterinstall.sh\n    permissions: \"0744\"\n')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))), '.blob.core.windows.net/vhds/', variables('agentVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1), '/configureagent')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('agentVMNamePrefix'), copyIndex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('agentCustomScript')]"
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('managementEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    },
    "applicationFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('applicationEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    }
  }
}
