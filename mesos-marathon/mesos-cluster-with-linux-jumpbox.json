{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      }
    },
    "linuxAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Linux Virtual Machine.  Not Required.  If not set, you must provide a SSH key."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Jumpbox Virtual Machine (Password Only Supported)."
      }
    },
    "windowsAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows Jumpbox Virtual Machine."
      }
    },
    "jumpboxEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the jumpbox.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "masterEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the agent pool IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 100"
      },
      "allowedValues": [
        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
        21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
        61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
        81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
      ]
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
      }
    },
    "linuxPublisher": {
      "type": "string",
      "defaultValue": "Canonical",
      "metadata": {
        "description": "This is the publisher of the image used by the linux cluster"
      }
    },
    "linuxOffer": {
      "type": "string",
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "This is the offer of the image used by the linux cluster"
      }
    },
    "linuxSku": {
      "type": "string",
      "defaultValue": "14.04.3-LTS",
      "metadata": {
        "description": "This is the linux sku used by the linux cluster"
      }
    },
    "linuxVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "This is the linux version used by the linux cluster"
      }
    },
    "windowsJumpboxPublisher": {
      "type": "string",
      "defaultValue": "MicrosoftVisualStudio",
      "metadata": {
        "description": "This is the windows publisher used by the windows jumpbox"
      }
    },
    "windowsJumpboxOffer": {
      "type": "string",
      "defaultValue": "VisualStudio",
      "metadata": {
        "description": "This is the windows offer used by the windows jumpbox"
      }
    },
    "windowsJumpboxSku": {
      "type": "string",
      "defaultValue": "VS-2015-Enterprise-AzureSDK-2.7-WS2012R2",
      "metadata": {
        "description": "This is the windows sku used by the windows jumpbox"
      }
    },
    "isValidation": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [0,1],
      "metadata": {
        "description": "This is testing in the validation region"
      }
    },
    "disablePasswordAuthentication": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "This setting controls whether password auth is disabled for Linux VMs provisioned by this template. Default is true which disables password and makes SSH key required."
      }
    },
    "setLinuxConfigurationForVMCreate": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [0,1],
      "metadata": {
        "description": "This setting controls whether Linux configuration with SSH Key is passed in VM PUT Payload.  Defaults to 1.  If SSH Key is blank, this must be set to 0."
      }
    },
    "nameSuffix": {
      "type": "string",
      "defaultValue": "01234567",
      "metadata": {
        "description": "A string to include in the names of resources created.  Defaults to 0.  Can not be blank."
      }
    },
    "vmsPerStorageAccount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "This specifies the number of VMs per storage accounts"
      }
    },
    "postInstallScriptURI": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "After installation, this specifies a script to download and install.  To disabled, set value to 'disabled'."
      }
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "adminPassword": "[parameters('linuxAdminPassword')]",
    "jumpboxEndpointDNSNamePrefix": "[tolower(parameters('jumpboxEndpointDNSNamePrefix'))]",
    "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "agentEndpointDNSNamePrefix": "[tolower(parameters('agentEndpointDNSNamePrefix'))]",
    "agentCount": "[parameters('agentCount')]",
    "masterCount": "[parameters('masterCount')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "linuxPublisher": "[parameters('linuxPublisher')]",
    "linuxOffer": "[parameters('linuxOffer')]",
    "linuxSku": "[parameters('linuxSku')]",
    "linuxVersion": "[parameters('linuxVersion')]",
    "windowsJumpboxPublisher": "[parameters('windowsJumpboxPublisher')]",
    "windowsJumpboxOffer": "[parameters('windowsJumpboxOffer')]",
    "windowsJumpboxSku": "[parameters('windowsJumpboxSku')]",
    "windowsAdminUsername": "[parameters('windowsAdminUsername')]",
    "windowsAdminPassword": "[parameters('windowsAdminPassword')]",
    "vmsPerStorageAccount": "[parameters('vmsPerStorageAccount')]",
    "postInstallScriptURI": "[parameters('postInstallScriptURI')]",

    "nameSuffix": "[parameters('nameSuffix')]",

    "isValidation": "[parameters('isValidation')]",
    "storageLocations": [
      "[resourceGroup().location]",
      "East US 2 (Stage)"
    ],
    "storageLocation": "[variables('storageLocations')[variables('isValidation')]]",

    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "disablePasswordAuthentication": "[parameters('disablePasswordAuthentication')]",
    "setLinuxConfigurationForVMCreate": "[parameters('setLinuxConfigurationForVMCreate')]",
    "linuxConfigurations": [
        {},
        {
            "disablePasswordAuthentication": "[variables('disablePasswordAuthentication')]",
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[variables('sshRSAPublicKey')]"
                    }
                ]
            }
        }
    ],
    "linuxConfiguration": "[variables('linuxConfigurations')[variables('setLinuxConfigurationForVMCreate')]]",

    "orchestratorName": "mesos",

    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "agentPublicIPAddressName": "[concat(variables('orchestratorName'), '-agent-ip-', variables('agentEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "jumpboxPublicIPAddressName": "[concat(variables('orchestratorName'), '-jumpbox-ip-', variables('jumpboxEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",

    "marathonEnabled": true,
    "chronosEnabled": true,
    "swarmEnabled": false,
    "osImagePublisher": "[variables('linuxPublisher')]",
    "osImageOffer": "[variables('linuxOffer')]",
    "osImageSKU": "[variables('linuxSku')]",
    "osImageVersion": "[variables('linuxVersion')]",

    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/18",
    "storageAccountType": "Standard_GRS",
    "storageAccountPrefixes": [
      "0","6","c","i","o","u","1","7","d","j","p","v",
      "2","8","e","k","q","w","3","9","f","l","r","x",
      "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "storageAccountBaseName": "[concat(uniqueString(variables('masterEndpointDNSNamePrefix')), variables('orchestratorName'))]",
    "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddr'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),' ',variables('postInstallScriptURI'))]",

    "jumpboxNSGName": "[concat(variables('orchestratorName'), '-jumpbox-nsg-', variables('nameSuffix'))]",
    "jumpboxNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('jumpboxNSGName'))]",
    "jumpboxAddr": 4,
    "jumpboxVMName": "[concat('jb-', variables('nameSuffix'))]",
    "jumpboxVMSize": "Standard_A1",

    "jumpboxLinuxInstallParameters": "[concat(variables('adminUsername'), ' ', variables('masterCount'), ' ', variables('masterFirstAddr'))]",
    "jumpboxLinuxCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-ubuntu.sh ',variables('jumpboxLinuxInstallParameters'),' >> /var/log/azure/jumpbox-bootstrap.log 2>&1 &\" &')]",

    "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
    "setBrowserFirstTabDefaultSuffix": "0:5050",
    "jumpboxWindowsCustomScript": "[concat(variables('setBrowserFirstTabDefaultPrefix'),variables('masterVMNamePrefix'),variables('setBrowserFirstTabDefaultSuffix'))]",

    "masterNSGName": "[concat(variables('orchestratorName'), '-master-nsg-', variables('nameSuffix'))]",
    "masterNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('masterNSGName'))]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterFirstAddr": 5,
    "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterVMSize":"Standard_A1",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",

    "agentNSGName": "agent-nsg",
    "agentNSGName": "[concat(variables('orchestratorName'), '-agent-nsg-', variables('nameSuffix'))]",
    "agentNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentNSGName'))]",
    "agentFirstAddr": 20,
    "agentVMNamePrefix": "[concat(variables('orchestratorName'), '-agent-', variables('nameSuffix'), '-')]",
    "agentAvailabilitySet": "[concat(variables('orchestratorName'), '-agent-availabilitySet-', variables('nameSuffix'))]",
    "agentsLbName": "[concat(variables('orchestratorName'), '-agent-lb-', variables('nameSuffix'))]",
    "agentsLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agentsLbName'))]",
    "agentsLbIPConfigName": "[concat(variables('orchestratorName'), '-agent-lbFrontEnd-', variables('nameSuffix'))]",
    "agentsLbIPConfigID": "[concat(variables('agentsLbID'),'/frontendIPConfigurations/', variables('agentsLbIPConfigName'))]",
    "agentsLbBackendPoolName": "[concat(variables('orchestratorName'), '-agent-pool-', variables('nameSuffix'))]",
    "agentStorageAccountsCount": "[add(div(variables('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),1)))]",
    "agentsPerIPv4Octet": 200,
    "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('jumpboxPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('jumpboxEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('jumpboxNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('jumpboxVMName'), '-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxPublicIPAddressName'))]",
        "[variables('vnetID')]",
        "[variables('jumpboxNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('jumpboxNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], variables('jumpboxAddr'))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpboxVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxVMName'), '-nic')]",
        "[variables('masterStorageAccountName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('jumpboxVMSize')]"
        },
        "osProfile": {
          "computername": "[variables('jumpboxVMName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-ubuntu.sh\n    permissions: \"0744\"\n')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('linuxPublisher')]",
            "offer": "[variables('linuxOffer')]",
            "sku": "[variables('linuxSku')]",
            "version": "[variables('linuxVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('jumpboxVMName'),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('masterStorageAccountName'), '.blob.core.windows.net/vhds/', variables('jumpboxVMName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('jumpboxVMName'), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('jumpboxVMName'),'/installcustomscript')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('jumpboxVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "commandToExecute": "[variables('jumpboxLinuxCustomScript')]"
        }
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('masterStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('storageLocation')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('masterAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('masterPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('masterLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2200)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('masterNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]",
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]",
        "[variables('masterNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('masterNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], copyIndex(variables('masterFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('masterStorageAccountName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('masterStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('masterCustomScript')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),copyIndex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('storageLocation')]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('agentAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('agentPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('agentEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('agentsLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('agentsLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('agentPublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('agentsLbBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsLbID'),'/probes/tcpHTTPProbe')]"
              }
            }
          },
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsLbID'),'/probes/tcpHTTPSProbe')]"
              }
            }
          },
          {
            "name": "LBRulePort8080",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsLbID'),'/probes/tcpPort8080Probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpPort8080Probe",
            "properties": {
              "protocol": "tcp",
              "port": 8080,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatRules": []
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('agentNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "http",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 220,
              "direction": "Inbound"
            }
          },
          {
            "name": "Tcp8080",
            "properties": {
              "description": "Allow port 8080",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 230,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('agentVMNamePrefix'), 'nic-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[variables('agentsLbID')]",
        "[variables('vnetID')]",
        "[variables('agentNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('agentNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0.0/18')[0], div(copyIndex(),variables('agentsPerIPv4Octet')), '.', add(mod(copyIndex(),variables('agentsPerIPv4Octet')), variables('agentFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentAvailabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('agentVMNamePrefix'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('agentVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))), '.blob.core.windows.net/vhds/', variables('agentVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(), '/configureagent')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('agentVMNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('agentCustomScript')]"
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "agentFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}
