{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "jumpboxEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the jumpbox.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "managementEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the container service.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "applicationEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the application.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 200"
      },
      "allowedValues": [
        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
        21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
        61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
        81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
      ]
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "Configure all linux machines with the SSH rsa public key string.  Use 'disabled' to not configure access with SSH rsa public key."
      }
    }
  },
  "variables": {
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "jumpboxEndpointDNSNamePrefix": "[tolower(parameters('jumpboxEndpointDNSNamePrefix'))]",
    "managementEndpointDNSNamePrefix": "[tolower(parameters('managementEndpointDNSNamePrefix'))]",
    "applicationEndpointDNSNamePrefix": "[tolower(parameters('applicationEndpointDNSNamePrefix'))]",
    "agentCount": "[parameters('agentCount')]",
    "masterCount": "[parameters('masterCount')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",

    "marathonEnabled": true,
    "chronosEnabled": true,
    "swarmEnabled": false,
    "osImagePublisher": "Canonical",
    "osImageOffer": "UbuntuServer",
    "osImageSKU": "14.04.3-LTS",
    "osImageVersion": "latest",
    "virtualNetworkName": "VNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetName": "Subnet",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/18",
    "nsgName": "node-nsg",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "storageAccountType": "Standard_GRS",
    "storageAccountPrefixes": [
      "0","6","c","i","o","u","1","7","d","j","p","v",
      "2","8","e","k","q","w","3","9","f","l","r","x",
      "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "vmsPerStorageAccount": 10,
    "storageAccountBaseName": "[concat(uniqueString(subscription().subscriptionId,resourceGroup().id),'mesos')]",
    "managementStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none",
    "postInstallScriptURI": "disabled",
    "singleQuote": "'",
    "sshQuotedString": "[concat(' ', variables('singleQuote'), variables('sshRSAPublicKey'), variables('singleQuote'), ' ')]",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),variables('sshQuotedString'))]",

    "jumpboxAddr": 4,
    "jumpboxVMName": "jumpbox1",
    "jumpboxVMSize":"Standard_D1",

    "jumpboxLinuxInstallParameters": "[concat(variables('adminUsername'), variables('sshQuotedString'))]",
    "jumpboxLinuxCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-ubuntu.sh ',variables('jumpboxLinuxInstallParameters'),' >> /var/log/azure/jumpbox-bootstrap.log 2>&1 &\" &')]",

    "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
    "setBrowserFirstTabDefaultSuffix": "1:5050",
    "jumpboxWindowsCustomScript": "[concat(variables('setBrowserFirstTabDefaultPrefix'),variables('masterVMNamePrefix'),variables('setBrowserFirstTabDefaultSuffix'))]",

    "masterFirstAddr": 5,
    "masterVMNamePrefix": "master",
    "masterAvailabilitySet": "masterAvailabilitySet",
    "masterLbName": "masterlb",
    "masterVMSize":"Standard_A1",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigName": "masterLBFrontEnd",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbBackendPoolName": "master-pool",
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",

    "agentFirstAddr": 20,
    "agentVMNamePrefix": "agent",
    "agentAvailabilitySet": "agentAvailabilitySet",
    "appLbName": "appLb",
    "appNodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('appLbName'))]",
    "appNodesLbIPConfigName": "NodesAppLBFrontEnd",
    "appNodesLbIPConfigID": "[concat(variables('appNodesLbID'),'/frontendIPConfigurations/', variables('appNodesLbIPConfigName'))]",
    "appNodesLbBackendPoolName": "node-app-pool",
    "agentStorageAccountsCount": "[add(div(variables('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),1)))]",
    "agentsPerIPv4Octet": 200,
    "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('managementStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "description": "HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 220,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp",
            "properties": {
              "description": "RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('jumpboxEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('jumpboxEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('jumpboxVMName'), '-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxEndpointDNSNamePrefix'))]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], variables('jumpboxAddr'))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxEndpointDNSNamePrefix'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpboxVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxVMName'), '-nic')]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('jumpboxVMSize')]"
        },
        "osProfile": {
          "computername": "[variables('jumpboxVMName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftVisualStudio",
            "offer": "VisualStudio",
            "sku": "VS-2015-Enterprise-AzureSDK-2.7-WS2012R2",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('jumpboxVMName'),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('jumpboxVMName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('jumpboxVMName'), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('jumpboxVMName'),'/installcustomscript')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('jumpboxVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "settings": {
          "commandToExecute": "[variables('jumpboxWindowsCustomScript')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('masterAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('managementEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('managementEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('masterLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('managementEndpointDNSNamePrefix'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('managementEndpointDNSNamePrefix'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2211)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]",
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(1))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], copyIndex(variables('masterFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(1))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('masterVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n\n')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(1), '/configuremaster')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('masterCustomScript')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),copyIndex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('agentAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('applicationEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('applicationEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('appLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('applicationEndpointDNSNamePrefix'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('appNodesLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('applicationEndpointDNSNamePrefix'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appNodesLbBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPProbe')]"
              }
            }
          },
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPSProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatRules": []
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[variables('appNodesLbID')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0.0/18')[0], div(copyIndex(),variables('agentsPerIPv4Octet')), '.', add(mod(copyIndex(),variables('agentsPerIPv4Octet')), variables('agentFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentVMNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentAvailabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('agentVMNamePrefix'), copyIndex(1))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n\n')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))), '.blob.core.windows.net/vhds/', variables('agentVMNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentVMNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(1), '/configureagent')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('agentVMNamePrefix'), copyIndex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('agentCustomScript')]"
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('managementEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    },
    "applicationFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('applicationEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    }
  }
}
