{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "jumpboxEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the jumpbox.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "managementEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the container service.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "applicationEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the application.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 200"
      },
      "allowedValues": [
        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
        21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
        61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
        81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
      ]
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "Configure all linux machines with the SSH rsa public key string.  Use 'disabled' to not configure access with SSH rsa public key."
      }
    }
  },
  "variables": {
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "jumpboxEndpointDNSNamePrefix": "[tolower(parameters('jumpboxEndpointDNSNamePrefix'))]",
    "managementEndpointDNSNamePrefix": "[tolower(parameters('managementEndpointDNSNamePrefix'))]",
    "applicationEndpointDNSNamePrefix": "[tolower(parameters('applicationEndpointDNSNamePrefix'))]",
    "agentCount": "[parameters('agentCount')]",
    "masterCount": "[parameters('masterCount')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",

    "marathonEnabled": true,
    "chronosEnabled": true,
    "swarmEnabled": true,
    "osImagePublisher": "Canonical",
    "osImageOffer": "UbuntuServer",
    "osImageSKU": "14.04.3-LTS",
    "osImageVersion": "latest",
    "virtualNetworkName": "VNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetName": "Subnet",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/18",
    "storageAccountType": "Standard_GRS",
    "storageAccountPrefixes": [
      "0","6","c","i","o","u","1","7","d","j","p","v",
      "2","8","e","k","q","w","3","9","f","l","r","x",
      "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "vmsPerStorageAccount": 10,
    "storageAccountBaseName": "[concat(uniqueString(subscription().subscriptionId,resourceGroup().id),'mesos')]",
    "managementStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none",
    "postInstallScriptURI": "disabled",
    "singleQuote": "'",
    "sshQuotedString": "[concat(' ', variables('singleQuote'), variables('sshRSAPublicKey'), variables('singleQuote'), ' ')]",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddr'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),variables('sshQuotedString'))]",

    "jumpboxNSGName": "jumpbox-nsg",
    "jumpboxNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('jumpboxNSGName'))]",
    "jumpboxAddr": 4,
    "jumpboxVMName": "jumpbox",
    "jumpboxVMSize":"Standard_D1",

    "jumpboxLinuxInstallParameters": "[concat(variables('adminUsername'), variables('sshQuotedString'))]",
    "jumpboxLinuxCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-ubuntu.sh ',variables('jumpboxLinuxInstallParameters'),' >> /var/log/azure/jumpbox-bootstrap.log 2>&1 &\" &')]",

    "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
    "setBrowserFirstTabDefaultSuffix": "0:5050",
    "jumpboxWindowsCustomScript": "[concat(variables('setBrowserFirstTabDefaultPrefix'),variables('masterVMNamePrefix'),variables('setBrowserFirstTabDefaultSuffix'))]",

    "masterNSGName": "master-nsg",
    "masterNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('masterNSGName'))]",
    "masterVMNamePrefix": "master",
    "masterFirstAddr": 5,
    "masterAvailabilitySet": "masterAvailabilitySet",
    "masterLbName": "masterlb",
    "masterVMSize":"Standard_A1",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigName": "masterLBFrontEnd",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbBackendPoolName": "master-pool",
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",

    "agentNSGName": "agent-nsg",
    "agentNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentNSGName'))]",
    "agentFirstAddr": 20,
    "agentVMNamePrefix": "agent",
    "agentAvailabilitySet": "agentAvailabilitySet",
    "appLbName": "appLb",
    "appNodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('appLbName'))]",
    "appNodesLbIPConfigName": "NodesAppLBFrontEnd",
    "appNodesLbIPConfigID": "[concat(variables('appNodesLbID'),'/frontendIPConfigurations/', variables('appNodesLbIPConfigName'))]",
    "appNodesLbBackendPoolName": "node-app-pool",
    "agentStorageAccountsCount": "[add(div(variables('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),1)))]",
    "agentsPerIPv4Octet": 200,
    "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('jumpboxEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('jumpboxEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('jumpboxNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('jumpboxVMName'), '-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxEndpointDNSNamePrefix'))]",
        "[variables('vnetID')]",
        "[variables('jumpboxNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('jumpboxNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], variables('jumpboxAddr'))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxEndpointDNSNamePrefix'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpboxVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxVMName'), '-nic')]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('jumpboxVMSize')]"
        },
        "osProfile": {
          "computername": "[variables('jumpboxVMName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftVisualStudio",
            "offer": "VisualStudio",
            "sku": "VS-2015-Enterprise-AzureSDK-2.7-WS2012R2",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('jumpboxVMName'),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('jumpboxVMName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('jumpboxVMName'), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('jumpboxVMName'),'/installcustomscript')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('jumpboxVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "settings": {
          "commandToExecute": "[variables('jumpboxWindowsCustomScript')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('managementStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('masterAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('managementEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('managementEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('masterLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('managementEndpointDNSNamePrefix'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('managementEndpointDNSNamePrefix'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2211)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('masterNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]",
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]",
        "[variables('masterNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('masterNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], copyIndex(variables('masterFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('masterVMNamePrefix'), copyIndex(), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('managementStorageAccountName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('managementStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), copyIndex(), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('masterCustomScript')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),copyIndex(1))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('agentAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('applicationEndpointDNSNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('applicationEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('appLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('applicationEndpointDNSNamePrefix'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('appNodesLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('applicationEndpointDNSNamePrefix'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appNodesLbBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPProbe')]"
              }
            }
          },
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpHTTPSProbe')]"
              }
            }
          },
          {
            "name": "LBRulePort8080",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('appNodesLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('appNodesLbID'),'/probes/tcpPort8080Probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpPort8080Probe",
            "properties": {
              "protocol": "tcp",
              "port": 8080,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatRules": []
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('agentNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "http",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound"
            }
          },
          {
            "name": "https",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 220,
              "direction": "Inbound"
            }
          },
          {
            "name": "port8080",
            "properties": {
              "description": "Allow port 8080",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 230,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[variables('appNodesLbID')]",
        "[variables('vnetID')]",
        "[variables('agentNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('agentNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0.0/18')[0], div(copyIndex(),variables('agentsPerIPv4Octet')), '.', add(mod(copyIndex(),variables('agentsPerIPv4Octet')), variables('agentFirstAddr')))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('appNodesLbID'), '/backendAddressPools/', variables('appNodesLbBackendPoolName'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentVMNamePrefix'), copyIndex(), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentAvailabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('agentVMNamePrefix'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('agentVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))), '.blob.core.windows.net/vhds/', variables('agentVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentVMNamePrefix'), copyIndex(), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('agentVMNamePrefix'), copyIndex(), '/configureagent')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('agentCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('agentVMNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[variables('agentCustomScript')]"
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('managementEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    },
    "applicationFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('applicationEndpointDNSNamePrefix'))).dnsSettings.fqdn]"
    }
  }
}
